services:
  app:
    container_name: gestao_vagas_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=${DATABASE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gestao_vagas_network
    restart: always

  postgres:
    container_name: gestao_vagas_postgres
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=gestao_vagas
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d gestao_vagas"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - gestao_vagas_network
    restart: always

  pgadmin:
    container_name: gestao_vagas_pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      - postgres
    networks:
      - gestao_vagas_network
    restart: always

networks:
  gestao_vagas_network:
    driver: bridge

volumes:
  postgres_data: